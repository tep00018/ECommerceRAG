# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.
#  For PyCharm Community Edition, use 'PyCharm CE' template.
.idea/

# VS Code
.vscode/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# Data files (large files should not be in git)
data/nodes/*.csv
data/queries/*.csv
data/indices/
data/results/

# Model files and indices
*.index
*.pkl
*.bin
*.pt
*.pth
*.h5
*.hdf5

# Logs
*.log
logs/
log/

# Temporary files
*.tmp
temp/
tmp/

# Cached models
.cache/
cache/

# Jupyter checkpoints
.ipynb_checkpoints/

# Experiment outputs
outputs/
experiments/
checkpoints/
models/

# Configuration overrides (keep templates, ignore local configs)
configs/local_*.yaml
configs/*_local.yaml

# Evaluation results and outputs
results/
*.results
evaluation_*.csv
*_partial.csv

# Documentation builds
docs/_build/
docs/build/

# Benchmark data
benchmarks/data/
benchmark_results/

# IDE specific files
.vscode/settings.json
.vscode/launch.json
*.iml

# Environment variables
.env
.env.local
.env.*.local

# Coverage files
.coverage
coverage.xml
htmlcov/

# Profiling data
*.prof

# Memory profiling
*.mprof

# Large datasets
*.zip
*.tar.gz
*.tar.bz2
*.rar
*.7z

# Wandb runs
wandb/

# MLflow runs
mlruns/

# DVC
.dvc/
*.dvc

# Hydra outputs
outputs/
.hydra/
# Jupyter Checkpoints
**/.ipynb_checkpoints/
.ipynb_checkpoints/

# Jupyter Checkpoints
**/.ipynb_checkpoints/
.ipynb_checkpoints/
