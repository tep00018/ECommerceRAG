# FRMR Pipeline Configuration
# FAISS Retrieval and MS MARCO Reranking
# Based on actual implementation: FRMR_faiss_hnsw_retriever_ce_compositequeries_040125.py

pipeline:
  name: "FRMR"
  description: "FAISS Retrieval and MS MARCO Reranking Pipeline"

# Data paths
data:
  node_file: "data/nodes/amazon_stark_nodes_processed.csv"
  query_splits:
    validation: "data/queries/validation_queries.csv"
    evaluation_filtered: "data/queries/evaluation_queries_filtered.csv"  # â‰¤20 answers
    evaluation_full: "data/queries/evaluation_queries_full.csv"          # All queries
  results_dir: "data/results/"

# FAISS Retriever Configuration (E5-Large + HNSW)
retriever:
  model_name: "intfloat/e5-large"
  index_path: "data/indices/faiss_hnsw_index_64_100_200_040125.index"
  index_type: "HNSW"
  dimension: 1024     # E5-large embedding dimension
  
  # HNSW Index Parameters (from actual implementation)
  index_params:
    M: 64                    # Number of neighbors per node
    efConstruction: 100      # Construction time parameter  
    efSearch: 200           # Search time parameter
  
  # Retrieval parameters
  retrieve_k: 100           # Number of candidates to retrieve

# MS MARCO Cross-Encoder Reranker Configuration
reranker:
  model_name: "cross-encoder/ms-marco-MiniLM-L-6-v2"
  batch_size: 32
  max_length: 512
  rerank_k: 100             # Number of candidates to rerank and return

# Evaluation Configuration
evaluation:
  metrics:
    - "hit@1"
    - "hit@5" 
    - "hit@10"
    - "hit@20"
    - "hit@30"
    - "hit@50"
    - "hit@75"
    - "hit@100"
    - "recall@20"
    - "recall@30"
    - "recall@50"
    - "recall@75"
    - "recall@100"
    - "MRR"
  
  # Save partial results during processing
  save_partial: true
  partial_interval: 10      # Save every N queries
  
  # Expected performance (from actual results)
  expected_performance:
    hit@1: 51.25
    hit@5: 73.56
    mrr: 0.6128
    speed: "1.89 it/s"

# Logging Configuration
logging:
  level: "INFO"             # Options: DEBUG, INFO, WARNING, ERROR
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
# Hardware Configuration
hardware:
  device: "auto"            # Options: "auto", "cuda", "cpu"
  num_workers: 4            # For data loading

# Pipeline Characteristics
characteristics:
  description: "Best speed/accuracy tradeoff for production systems"
  strengths:
    - "Fast MS MARCO cross-encoder reranking (1.89 it/s)"
    - "Production-ready performance" 
    - "Cost-effective for large-scale deployment"
    - "189x faster than FRWSR with only 3.5% accuracy loss"
  use_cases:
    - "Customer-facing applications requiring fast response times"
    - "Production systems with moderate computational resources"
    - "Real-time query processing scenarios"